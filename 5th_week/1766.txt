Need : 매번 자신보다 우선순위가 앞선 문제가 없는 문제들 중 가장 낮은 문제

따로 관리하면 탐색시간때문에 TO날듯
우선순위를 한번에 관리해야할거같은데
	1. 해결한 문제를 우선순위에서 지우기 위해서
	2. 해결하려는 문제가 걸려있는 우선순위가 있는지 확인하기 위해서
		1) 확인하는 방법
		2) if yes, 처리를 어떻게?
			- 9 3 이라면 3은 9가 처리되기 전까지 처리가 안됨, 사실상 우선순위 10

순서쌍 (문제번호, 순서값) ( 순서값 != 우선순위 )
안걸려 있는 애들은  순서값 = 문제번호
걸려 있는 애들은 순서값 = max(우선순위 걸려있는 애들 중 max + 1, 문제 번호)

순서값이 더 낮은 순서대로 heap에 삽입
if 순서값이 동일하면 문제 번호가 낮은 문제가 heap 상단


*만약 
	2 5
	2 7
	7 5
이면?
될거같음

*만약 
	3 1
	5 3
	7 5
?
2 1 4 5 3
!= 2 4 5 3 1
순서값을 받을때 한번에 쭉 받고
타고들어가면서 최대값을 받아야될거같음

입력이 100,000개밖에 안돼서 그냥 재귀적으로 타고 들어가도 ㄱㅊ을듯

===============================================================

각 Heap : 내가 해결되면 출력될 수 있는 문제들(오름차순)
available : 걸려 있는 우선순위 개수 안걸려 있으면 0

우선순위 관리?

5 3
5 2
2 1

4 5 2 1 3 6

for 문 돌리면서 avilable이 1이면 패스
	0이면{
		출력
		걸려있는 Heap 확인 {
			1. top() 에 걸려있는 Heap 확인
			2. pop하면서 출력{
				...
			}
			}pop 하면서 출력

**n이 m보다 작아도 의미가 있음
	-> top()을 avail 1깎고 바로 DFS로 들어가면 안됨
	-> 1만 깎고 탈출, 반복문의 iterator를 0으로 보내서 처음부터 달림

