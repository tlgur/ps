1. 트리 구성
	-> 루트 노드 선택
	--> 굳이 안구해야도 될듯, 입력 받을때 같은 edge가 두번씩 입력되므로, 
		연결 대상 노드가 기준 노드보다 작은 경우엔 pass
	
트리보다는 그래프 최장거리 문제라고 생각하면 될듯

============

오름차순으로만 edge를 저장하면 길이 끊김.
모든 노드별로 연결된 노드 정보 저장 + visit 배열로 방문 여부 기록

트리형태이기 때문에 DFS를 해도 Loop 걱정 안해도됨 + 방문 안하는 노드는 없음
출발은 1에서부터 출발

===============> 방향이 고정이라 (출발점이 무조건 지름의 한쪽 끝인 문제)

이전 문제 풀었듯

DFS + first/second 값 구해서 서브 트리까지 값 구하는 방식으로 계산

출발 노드는 무조건 1
func(){
연결된 노드가 방문한적 있으면 pass
else temp = func(connect_node) + connect_line_weight
모든 temp에 대해 1번째 값, 두번째 값 기록
두 값 더한 값으로 most 갱신
return 최대값
}
