S(n) 별로 길이를 좀 구하고 저장해야할거같음

S(1) = 3
S(n) = S(n - 1) << 1 + 1 + n + 2 = 2S(n - 1) + n + 3

일단 dp로 10^9번째가 S의 몇번째 항까지 가는지 구해야함
(S(27) == 1,073,741,792, S(26) == 536,870,881)

char func(int cur){
 1. cur이 몇번째 항에 속하는지 구함 (t) (이거 이진탐색으로 하면 더 빠를거같긴한데 배열 사이즈도 작고 구현도 귀찮으니 일단 for)
 2. cur -= S(t - 1)
 3. if(cur <= t + 3) 이번 항에 추가된 mooo.. 중 찾아서 return
    else return func(cur - t - 3);
}


